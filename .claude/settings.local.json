{
  "permissions": {
    "allow": [
      "Bash(mv:*)",
      "Bash(git init:*)",
      "Bash(git branch:*)",
      "Bash(git remote add:*)",
      "Bash(git fetch:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(grep:*)",
      "Bash(cat:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(pnpm run:*)",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(pnpm list:*)",
      "Bash(claude update)",
      "Bash(find:*)",
      "Bash(true)",
      "Bash(rg:*)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -C 2 \"placeholder.*\\.(jpg|jpeg|png|gif|webp|svg)|dummy.*\\.(jpg|jpeg|png|gif|webp|svg)|lorem.*\\.(jpg|jpeg|png|gif|webp|svg)\" /mnt/c/Dev/Cascade/eastbay --type ts --type tsx --type js --type jsx --type md --type json)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -C 2 \"placeholder.*\\.(jpg|jpeg|png|gif|webp|svg)|dummy.*\\.(jpg|jpeg|png|gif|webp|svg)|lorem.*\\.(jpg|jpeg|png|gif|webp|svg)\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(speciali[sz]e[ds]?|organi[sz]e[ds]?|reali[sz]e[ds]?|analy[sz]e[ds]?|center[^e]|color[^u]|honor[^u]|favor[^u]|theater|defense|licens[^i]|practic[^i]|fiber|liter|meter|catalog)\\b\" --type tsx --type ts --type md /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(speciali[sz]e[ds]?|organi[sz]e[ds]?|reali[sz]e[ds]?|analy[sz]e[ds]?|center[^e]|color[^u]|honor[^u]|favor[^u]|theater|defense|licens[^i]|practic[^i]|fiber|liter|meter|catalog)\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\btheater\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\bcenter\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(color|analyze|organize|realize|specialize)\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"town center|city center|medical center|community center\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"town center\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"Walk-in center\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"color contrast\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(organized?|specializes?|specialized?|realizes?|realized?|catalogs?|fibers?|meters?|liters?|honors?|favors?)\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(honor|favor|defense|license|practice)\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"\\b(fiber|liter|meter|organize|realize)\\b\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -w -i \"organize\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"\\borgani\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"\\breali\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -i \"speciali\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"customized\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"recogni\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(/usr/local/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg \"optimiz\" -g \"*.tsx\" -g \"*.ts\" -g \"*.md\" /mnt/c/Dev/Cascade/eastbay)",
      "Bash(npm install)",
      "Bash(touch:*)",
      "Bash(rm:*)",
      "Bash(diff:*)",
      "Bash(mkdir:*)",
      "Bash(npx:*)",
      "Bash(claude mcp add:*)",
      "Bash(pnpm seed:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm install:*)",
      "Bash(pkill:*)",
      "Bash(ln:*)",
      "Bash(tree:*)",
      "Bash(curl:*)",
      "Bash(git reset:*)",
      "mcp__sanity__get_initial_context",
      "mcp__sanity__get_schema",
      "mcp__sanity__create_document",
      "mcp__sanity__publish_document",
      "Bash(npm run dev:*)",
      "mcp__playwright__browser_navigate",
      "mcp__sanity__query_documents",
      "mcp__sanity__patch_document",
      "Bash(dos2unix:*)",
      "mcp__sanity__update_document",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_network_requests",
      "Bash(npm run build:*)",
      "Bash(npm run sanity:deploy:*)",
      "Bash(npm run:*)",
      "Read(//tmp/chrome-devtools-mcp-K6ZO1P/**)",
      "Bash(netstat:*)",
      "Bash(findstr:*)",
      "Bash(taskkill:*)",
      "Bash(pnpm outdated:*)",
      "Bash(pnpm update:*)",
      "Bash(git log:*)",
      "Bash(pnpm build)",
      "Bash(timeout 30 pnpm:*)",
      "Bash(exit 0)",
      "Bash(pnpm dev)",
      "Bash(timeout:*)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "sanity",
    "chrome-devtools",
    "context7",
    "bright-data"
  ]
}
